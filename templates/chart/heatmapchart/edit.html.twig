{# src/Mc/ChartBundle/Resources/views/Chart/Heatmapchart/edit.html.twig #}
{# Template affichant le formulaire d'édition d'un graphique heatmap #}

{% extends "layout.html.twig" %}

{% block body %}
	{% if is_granted('ROLE_SCIENTIFIC') %}
		{% include 'chart/form/formChart.html.twig' with {'title' : 'chart.editHighchart'|trans(), 'typeChart': 'heatmapchart'} %}
	{% endif %}
{% endblock %}

{% block javascripts %}
	{{ parent() }}	

    <script type="text/javascript" src="/js/Chart/heatmapscript.js"></script>
    <script type="text/javascript" src="/js/Chart/yaxis.js"></script>
    <script type="text/javascript" src="/js/Chart/highcharts.js"></script>
    <script type="text/javascript" src="/js/Chart/highcharts-more.js"></script>
    <script type="text/javascript" src="/js/Chart/boost.js"></script>
    <script type="text/javascript" src="/js/Chart/heatmap.js"></script>
    <script type="text/javascript" src="/js/Chart/heatmapchart.js"></script>

	{% include 'chart/js/iframe.js.twig' with {'typeChart': 'heatmapchart'} %}	

	<script type="text/javascript">
		{% block document_ready %}
			$('#submitbtn').click(function (e) {
			    if (e.target) {
			        $("form")[0].submit();
			    }
			});
		{% endblock %}

		{% include 'chart/js/createChart.js.twig' %}

		load = true;

		var typeXAxis = $('select#mc_chartbundle_chart_xAxisType');
		options.xAxis.type = getTypeAxis($(typeXAxis).val());
		options.chart.heatmap = true;
		options.chart.type = 'heatmap';
		options.colorAxis = {
			stops: colorJet,
    		labels: {
    			format: '{value}'
    		}
		};

		/* Creation du chart */
		var chart = new Highcharts.Chart(options);
		chart.yAxis[0].remove();

		$(typeXAxis).change(function() {
			var axis = $('#container').highcharts().xAxis[0];
			updateTypeAxis(this, axis);
		});

		$(creditsDisplay).on('click', function(e) {
			if (e.target) {
		        $("form").submit(function (ev) {
					ev.preventDefault();
				});
		    }
		});

		$('#container').css('width', (chart.chartWidth + 3));

		/* Ajout de la fonctionnalité drag'n drop au graphique */
		$('#container').append('<img id="drag" src="{{ asset("img/drag\'n drop.png") }}" />');
		$("#container").draggable({ handle: "#drag" });

		/* Pour chaque axes-Y et ses séries, on recupère les valeurs en base et on appel l'évènement change pour mettre à jour le graphique */
		$(document).ready(function() {
			{% for yAxis in list_yAxis %}
				var indexS = 1;
				{% for serie in yAxis.series|reverse %}
					var containerSerie = $('div[id^=container_series_]');
					addOneSerie($(containerSerie).children(), containerSerie, 1);

					$.ajaxSetup({async: false});
						$('select#mc_chartbundle_chart_list_yAxis_1_series_' + indexS + '_dataList').val('{{ serie.dataList.id }}').change();
						//$('select#mc_chartbundle_chart_list_yAxis_1_series_' + indexS + '_parameterDataList').val('{{ serie.parameterDataList }}').change();
					$.ajaxSetup({async: true});
					
					$('select#mc_chartbundle_chart_list_yAxis_1_series_' + indexS + '_typeSerie').val('{{ serie.typeSerie }}').change();
					$('input#mc_chartbundle_chart_list_yAxis_1_series_' + indexS + '_colsize').val('{{ serie.colsize }}').change();
					indexS++;
				{% endfor %}
			{% endfor %}
			
			/* Il n'y a qu'un seul axe Y */
			{% for yAxis in list_yAxis %}
				$('input#mc_chartbundle_chart_list_yAxis_1_titleYAxis').val('{{ yAxis.titleYAxis|e('js') }}').change();
				$('select#mc_chartbundle_chart_list_yAxis_1_typeYAxis').val('{{ yAxis.typeYAxis|e('js') }}').change();
				$('select#mc_chartbundle_chart_list_yAxis_1_top').val('{{ yAxis.top|e('js') }}').change();
				$('select#mc_chartbundle_chart_list_yAxis_1_height').val('{{ yAxis.height|e('js') }}').change();
				{% if yAxis.opposite == true %}
					$('input#mc_chartbundle_chart_list_yAxis_1_opposite').prop('checked', true).change();
				{% else %}
					$('input#mc_chartbundle_chart_list_yAxis_1_opposite').prop('checked', false).change();
				{% endif %}
			{% endfor %}
		});
		
		{% include 'chart/js/docReady.js.twig' %}

		load = false;
	</script>
{% endblock %}
